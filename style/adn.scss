*,
*::before,
*::after {
	box-sizing: border-box;
	margin: 0;
	padding: 0;
}
html {
	scroll-behavior: smooth;
}
body {
	padding: 5rem 1rem;
	perspective: none;
	transform-style: preserve-3d;
	font-family: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto,
		Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;
}
.spacer {
	height: 600px;
}
.adn-cont {
	position: relative;
	width: 80%;
	margin-inline: auto;
	display: grid;
	grid-template-columns: 1fr;
	justify-items: center;
	transform-style: preserve-3d;
	perspective: none;
	rotate: x 10deg;

	// background: #20202055;
	// border: 10px solid red;

	// &::before {
	// 	content: "";
	// 	position: absolute;
	// 	width: 1rem;
	// 	height: 100%;
	// 	background: red;
	// 	left: 50%;
	// 	right: 50%;
	// 	top: 0;
	// }

	// animation: rotate 6s linear infinite;

	& .helix {
		grid-column: 1;
		grid-row: 1;
	}
}
.cont {
	margin-inline: auto;
	display: grid;
	gap: 3rem;
	gap: 0;
	justify-items: center;
	transform-style: preserve-3d;
	perspective: none;
}
@keyframes rotate {
	to {
		transform: rotateY(360deg);
	}
}
.adn-cont .card {
	--distance: 300px;
	position: relative;
	width: initial;
	aspect-ratio: 1;
	transform-style: preserve-3d;
	display: grid;
	place-content: center;
	font-size: 1.5rem;
	transform: translateZ(var(--distance));
	text-align: center;
	color: white;
	background: white;
	padding: 1rem;
	border: 5px solid black;
	border-radius: 1rem;

	&::before {
		content: "";
		position: absolute;
		width: calc(var(--distance) * 2);
		height: 20px;
		top: 50%;
		left: 50%;
		transform-origin: left center;
		rotate: y 90deg;
		translate: 0 -50%;
		background: darkblue;
	}
}

$num_of_cards_per_turn: 12;
$num_of_columns: 2;
@for $n from 1 through $num_of_columns {
	@for $i from 1 through $num_of_cards_per_turn {
		.cont:nth-child(#{$n}) .card:nth-child(#{$num_of_cards_per_turn}n + #{$i}) {
			rotate: y
				calc(
					(#{$i} - 1) /
						$num_of_cards_per_turn *
						360deg +
						#{($n / $num_of_columns) *
						360deg}
				);
		}
	}
}

$total_number_of_cards: 12;
@for $i from 1 through $total_number_of_cards {
	.card:nth-child(#{$total_number_of_cards}n + #{$i}) {
		// --color: lch(90% 100 #{($i - 1) * calc(360 / $total_number_of_cards)}deg);
		--color: hsl(#{($i - 1) * calc(360 / $total_number_of_cards)}deg, 90%, 50%);
		background-color: var(--color);
	}
}

img {
	width: 150px;
	aspect-ratio: 1;
	backface-visibility: hidden;
	opacity: 0;
}
