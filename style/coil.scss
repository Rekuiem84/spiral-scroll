*,
*::before,
*::after {
	box-sizing: border-box;
	margin: 0;
	padding: 0;
}
html {
	scroll-behavior: smooth;
}
body {
	padding: 5rem 1rem;
	perspective: none;
	transform-style: preserve-3d;
	font-family: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto,
		Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;
}
.spacer {
	height: 600px;
}
.coil-cont {
	position: relative;
	width: 80%;
	margin-inline: auto;
	display: grid;
	grid-template-columns: 1fr;
	justify-items: center;
	transform-style: preserve-3d;
	perspective: none;
	rotate: x 15deg;

	// background: #20202055;
	// border: 10px solid red;

	// &::before {
	// 	content: "";
	// 	position: absolute;
	// 	width: 1rem;
	// 	height: 100%;
	// 	background: red;
	// 	left: 50%;
	// 	right: 50%;
	// 	top: 0;
	// }

	& .coil {
		grid-column: 1;
		grid-row: 1;
	}
}
.cont {
	margin-inline: auto;
	display: grid;
	gap: 3rem;
	justify-items: center;
	transform-style: preserve-3d;
	perspective: none;
}
img {
	width: 150px;
	aspect-ratio: 1;
	backface-visibility: hidden;
}

$num_of_cards_per_turn: 6;
$num_of_columns: 8;

@for $n from 1 through $num_of_columns {
	@for $i from 1 through $num_of_cards_per_turn {
		.coil:nth-child(#{$n}) .card:nth-child(#{$num_of_cards_per_turn}n + #{$i}) {
			rotate: y
				calc(
					(#{$i} - 1) /
						$num_of_cards_per_turn *
						360deg +
						#{($n / $num_of_columns) *
						360deg}
				);
		}
	}
}

.coil-cont .card {
	--distance: 400px;
	position: relative;
	width: initial;
	aspect-ratio: 1;
	transform-style: preserve-3d;
	display: grid;
	place-content: center;
	font-size: 1.5rem;
	transform: translateZ(var(--distance));
	text-align: center;
	color: white;
	background: white;
	padding: 1rem;
	border: 5px solid black;
	border-radius: 1rem;
}
